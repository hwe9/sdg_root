services:
  api_service:
    build: ${SRC_ROOT}/api
    container_name: api_service
    ports:
      - "8000:8000"
    volumes:
      - ${SRC_ROOT}/api:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      database_service:
        condition: service_healthy
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    deploy:
      resources:
        limits:
          cpus: '1.0'

  database_service:
    image: postgres:16-alpine
    container_name: database_service
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${DATABASE_SERVICE_VOLUMES}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'

  weaviate_service:
    image: semitechnologies/weaviate:1.24.1
    container_name: weaviate_service
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://weaviate_transformer_service:8080
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - CLUSTER_HOSTNAME=node1
      - MODULES_CLIENT_TIMEOUT=120s
    volumes:
      - ${WEAVIATE_SERVICE_VOLUMES}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8080/v1/meta"]
      interval: 30s
      timeout: 20s
      retries: 20
      start_period: 300s
    depends_on:
      weaviate_transformer_service:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2.0'    
          memory: '4G'   
        reservations:
          memory: '2G'
    
  weaviate_transformer_service:
    image: ${WEAVIATE_IMAGE}
    container_name: weaviate_transformer_service
    ports:
      - "8081:8080"
    environment:
      - ENABLE_GPU=0
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8080/.well-known/ready"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: '8G'
        reservations:
          memory: '4G'
  
  data_retrieval_service:
    build: ${SRC_ROOT}/data_retrieval
    container_name: data_retrieval_service
    volumes:
      - ${SRC_ROOT}/data_retrieval:/app
      - ${DATA_ROOT}/raw_data:/app/raw_data
      - ${DATA_ROOT}/quelle.txt:/app/quelle.txt
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      database_service:
        condition: service_healthy
    command: python main.py
    deploy:
      resources:
        limits:
          cpus: '1.0'

  data_processing_service:
    build: ${SRC_ROOT}/data_processing
    container_name: data_processing_service
    volumes:
      - ${SRC_ROOT}/data_processing:/app
      - ${DATA_ROOT}/raw_data:/app/raw_data
      - ${DATA_ROOT}/processed_data:/app/processed_data
      - ${DATA_ROOT}/images:/app/images
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - WEAVIATE_URL=${WEAVIATE_URL}
    depends_on:
      data_retrieval_service:
        condition: service_started
      database_service:
        condition: service_healthy
      weaviate_service:
        condition: service_healthy
      weaviate_transformer_service:
        condition: service_healthy
    command: python main.py
    deploy:
      resources:
        limits:
          cpus: '10.0'

  pgadmin_service:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_service
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - ${PGADMIN_VOLUMES}
    depends_on:
      database_service:
        condition: service_healthy
    user: "5050:5050"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
  
  weaviate_console:
    image: semitechnologies/weaviate-console
    container_name: weaviate_console
    ports:
      - "3001:3000"
    environment:
      - WEAVIATE_HOST=weaviate_service:8080
    depends_on:
      weaviate_service:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
    
  

